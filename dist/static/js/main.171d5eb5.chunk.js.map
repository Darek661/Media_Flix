{"version":3,"sources":["img/undraw.svg","components/Nav.js","components/Preloader.js","components/Landing_Page.js","components/Movie.js","components/TVshows.js","components/Popular.js","components/Newreleases.js","components/More_Info.js","components/More_Tv_Info.js","components/News.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Search_Movies","className","to","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","role","aria-haspopup","aria-labelledby","Component","class","style","width","height","marginTop","color","Landing_Page","state","input","key","data","isLoading","onSubmit","e","preventDefault","setState","console","log","fetch","then","res","json","dataJson","results","onChange","target","name","value","this","src","imgMovie","alt","placeholder","required","Preloader","map","item","maxWidth","poster_path","title","release_date","original_language","vote_average","Movie","useEffect","discover","useState","movie_data","setData","setLoading","TVshows","first_air_date","Popular","setloading","Newreleases","More_Info","match","mData","setMData","params","margin","overview","tData","setTData","number_of_seasons","number_of_episodes","News","fetch_News","news_data","setNData","articles","items","boxShadow","source","fontSize","author","App","path","exact","component","LandingPage","MoreTvInfo","MoreInfo","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"8FAAAA,EAAOC,QAAU,IAA0B,oC,oLCKtBC,G,sLAEjB,OACE,yBAAKC,UAAU,wCACb,yBAAKA,UAAU,4BACb,kBAAC,IAAD,CAAMC,GAAG,KACP,uBAAGD,UAAU,0BAA0BE,KAAK,SAA5C,cAIF,4BACEF,UAAU,iBACVG,KAAK,SACLC,cAAY,WACZC,cAAY,0BACZC,gBAAc,yBACdC,gBAAc,QACdC,aAAW,qBAEX,0BAAMR,UAAU,yBAGlB,yBAAKA,UAAU,2BAA2BS,GAAG,0BAC3C,wBAAIT,UAAU,sBACZ,wBAAIA,UAAU,mBACZ,kBAAC,IAAD,CAAMA,UAAU,sBAAsBC,GAAG,WAAzC,UACS,0BAAMD,UAAU,WAAhB,eAGX,wBAAIA,UAAU,YACZ,kBAAC,IAAD,CAAMA,UAAU,sBAAsBC,GAAG,YAAzC,cAIF,wBAAID,UAAU,qBACZ,uBACEA,UAAU,sCACVE,KAAK,YACLO,GAAG,iBACHC,KAAK,SACLN,cAAY,WACZO,gBAAc,OACdJ,gBAAc,SAPhB,cAWA,yBAAKP,UAAU,gBAAgBY,kBAAgB,kBAC7C,kBAAC,IAAD,CAAMZ,UAAU,gBAAgBC,GAAG,YAAnC,kBAGA,kBAAC,IAAD,CAAMD,UAAU,gBAAgBC,GAAG,gBAAnC,yBAKJ,wBAAID,UAAU,YACZ,kBAAC,IAAD,CAAMA,UAAU,sBAAsBC,GAAG,SAAzC,iB,GAxD2BY,c,yBCJ5B,aACb,OACE,gCACE,yBACEC,MAAM,iBACNC,MAAO,CACLC,MAAO,OACPC,OAAQ,OACRC,UAAW,OACXC,MAAO,QAETT,KAAK,UAEL,0BAAMI,MAAM,WAAZ,iBCTaM,E,2MACnBC,MAAQ,CACNC,MAAO,GACPC,IAAK,mCACLC,KAAM,GACNC,WAAW,G,EAEbC,SAAW,SAAAC,GACTA,EAAEC,iBACF,EAAKC,SAAS,CAAEJ,WAAW,IAAQ,WACjCK,QAAQC,IAAI,EAAKV,UAEnBS,QAAQC,IAAI,EAAKV,MAAMC,OACvBU,MAAM,qDAAD,OACkD,EAAKX,MAAME,IAD7D,kBAC0E,EAAKF,MAAMC,QAEvFW,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJN,QAAQC,IAAIK,GACZ,EAAKP,SAAS,CAAEL,KAAMY,EAASC,QAASZ,WAAW,IAAS,WAC1DK,QAAQC,IAAI,EAAKV,c,EAIzBiB,SAAW,SAAAX,GAAC,OAAI,EAAKE,SAAL,eAAiBF,EAAEY,OAAOC,KAAOb,EAAEY,OAAOE,S,wEAEhD,IACAnB,EAAUoB,KAAKrB,MAAfC,MAER,OACE,yBAAKtB,UAAU,oBACb,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,WACb,yBAAKA,UAAU,oBACb,wBAAIA,UAAU,eAAd,yBACA,uBAAGA,UAAU,cAAb,4CAKJ,yBAAKA,UAAU,uBACb,yBAAK2C,IAAKC,IAAU5C,UAAU,YAAY6C,IAAI,aAGhD,0BAAMnB,SAAUgB,KAAKhB,UACnB,2BACEvB,KAAK,OACLM,GAAG,eACH+B,KAAK,QACLC,MAAOnB,EACPwB,YAAY,oBACZ9C,UAAU,eACVsC,SAAUI,KAAKJ,SACfS,SAAS,SAEX,4BACE5C,KAAK,SACLH,UAAU,4CAFZ,YAQH0C,KAAKrB,MAAMI,WAAa,kBAACuB,EAAD,MACzB,yBAAKhD,UAAU,iBACZ0C,KAAKrB,MAAMG,KAAKyB,KAAI,SAAAC,GACnB,OACE,yBAAKlD,UAAU,+BACb,yBACEuB,IAAK2B,EAAKzC,GACVK,MAAM,YACNC,MAAO,CAAEoC,SAAU,UAEnB,yBAAKrC,MAAM,kBACT,yBAAKA,MAAM,YACT,yBACE6B,IAAG,6CAAwCO,EAAKE,aAChDtC,MAAM,WACN+B,IAAI,SAGR,yBAAK/B,MAAM,YACT,yBAAKA,MAAM,aACT,wBAAIA,MAAM,cAAcoC,EAAKG,OAC7B,uBAAGvC,MAAM,aAAT,iBACiBoC,EAAKI,cAEtB,uBAAGxC,MAAM,aAAT,sBACsBoC,EAAKK,mBAE3B,uBAAGzC,MAAM,aAAT,YAA+BoC,EAAKM,cACpC,kBAAC,IAAD,CACEvD,GAAE,WAAMiD,EAAKzC,IACbT,UAAU,qCAFZ,sBAchB,yBAAKA,UAAU,oB,GAzGmBa,a,OCD3B,SAAS4C,IACtBC,qBAAU,WACRC,MACC,IAH2B,MAIAC,mBAAS,IAJT,mBAIvBC,EAJuB,KAIXC,EAJW,OAKEF,oBAAS,GALX,mBAKvBnC,EALuB,KAKZsC,EALY,KAMxBJ,EAAW,WACfI,GAAW,GACX/B,MAAM,sIAGHC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAT,GACJM,QAAQC,IAAIP,EAAKa,SACjByB,EAAQtC,EAAKa,SACb0B,GAAW,OAIjB,OACE,yBAAK/D,UAAU,eACb,gCACE,wBAAIA,UAAU,yCAAd,UACCyB,GAAa,kBAACuB,EAAD,MACd,yBAAKhD,UAAU,iBACZ6D,EAAWZ,KAAI,SAAAC,GAAI,OAClB,yBAAKlD,UAAU,+BACb,yBACEuB,IAAK2B,EAAKzC,GACVK,MAAM,YACNC,MAAO,CAAEoC,SAAU,UAEnB,yBAAKrC,MAAM,kBACT,yBAAKA,MAAM,YACT,yBACE6B,IAAG,6CAAwCO,EAAKE,aAChDtC,MAAM,WACN+B,IAAI,SAGR,yBAAK/B,MAAM,YACT,yBAAKA,MAAM,uBACT,wBAAIA,MAAM,oBAAoBoC,EAAKG,OACnC,uBAAGvC,MAAM,aAAT,iBAAoCoC,EAAKI,cACzC,uBAAGxC,MAAM,aAAT,sBACsBoC,EAAKK,mBAE3B,uBAAGzC,MAAM,aAAT,YAA+BoC,EAAKM,cACpC,kBAAC,IAAD,CACEvD,GAAE,WAAMiD,EAAKzC,IACbT,UAAU,qCAFZ,uBAehB,yBAAKA,UAAU,gBC/DN,SAASgE,IACtBN,qBAAU,WACRC,MACC,IAH6B,MAIFC,mBAAS,IAJP,mBAIzBC,EAJyB,KAIbC,EAJa,OAKAF,oBAAS,GALT,mBAKzBnC,EALyB,KAKdsC,EALc,KAM1BJ,EAAW,WACfI,GAAW,GACX/B,MAAM,0GAGHC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAT,GACJM,QAAQC,IAAIP,EAAKa,SACjByB,EAAQtC,EAAKa,SACb0B,GAAW,OAIjB,OACE,yBAAK/D,UAAU,eACb,gCACE,wBAAIA,UAAU,yCAAd,aACCyB,GAAa,kBAACuB,EAAD,MACd,yBAAKhD,UAAU,iBACZ6D,EAAWZ,KAAI,SAAAC,GAAI,OAClB,yBAAKlD,UAAU,+BACb,yBACEuB,IAAK2B,EAAKzC,GACVK,MAAM,YACNC,MAAO,CAAEoC,SAAU,UAEnB,yBAAKrC,MAAM,kBACT,yBAAKA,MAAM,YACT,yBACE6B,IAAG,6CAAwCO,EAAKE,aAChDtC,MAAM,WACN+B,IAAI,SAGR,yBAAK/B,MAAM,YACT,yBAAKA,MAAM,uBACT,wBAAIA,MAAM,oBAAoBoC,EAAKV,MACnC,uBAAG1B,MAAM,aAAT,iBACiBoC,EAAKe,gBAEtB,uBAAGnD,MAAM,aAAT,sBACsBoC,EAAKK,mBAE3B,uBAAGzC,MAAM,aAAT,YAA+BoC,EAAKM,cACpC,kBAAC,IAAD,CACEvD,GAAE,mBAAciD,EAAKzC,IACrBT,UAAU,qCAFZ,uBAchB,yBAAKA,UAAU,gBChEN,SAASkE,IACtBR,qBAAU,WACRC,MACC,IAH6B,MAIFC,mBAAS,IAJP,mBAIzBC,EAJyB,KAIbC,EAJa,OAKAF,oBAAS,GALT,mBAKzBnC,EALyB,KAKd0C,EALc,KAM1BR,EAAW,WACfQ,GAAW,GACXnC,MAAM,6GAGHC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAT,GACJM,QAAQC,IAAIP,EAAKa,SACjByB,EAAQtC,EAAKa,SACb8B,GAAW,OAGjB,OACE,yBAAKnE,UAAU,eACb,gCACE,wBAAIA,UAAU,yCAAd,kBAGCyB,GAAa,kBAACuB,EAAD,MACd,yBAAKhD,UAAU,iBACZ6D,EAAWZ,KAAI,SAAAC,GAAI,OAClB,yBAAKlD,UAAU,+BACb,yBACEuB,IAAK2B,EAAKzC,GACVK,MAAM,YACNC,MAAO,CAAEoC,SAAU,UAEnB,yBAAKrC,MAAM,kBACT,yBAAKA,MAAM,YACT,yBACE6B,IAAG,6CAAwCO,EAAKE,aAChDtC,MAAM,WACN+B,IAAI,SAGR,yBAAK/B,MAAM,YACT,yBAAKA,MAAM,uBACT,wBAAIA,MAAM,oBAAoBoC,EAAKG,OACnC,uBAAGvC,MAAM,aAAT,iBAAoCoC,EAAKI,cACzC,uBAAGxC,MAAM,aAAT,sBACsBoC,EAAKK,mBAE3B,uBAAGzC,MAAM,aAAT,YAA+BoC,EAAKM,cACpC,kBAAC,IAAD,CACEvD,GAAE,WAAMiD,EAAKzC,IACbT,UAAU,qCAFZ,uBAehB,yBAAKA,UAAU,gBChEN,SAASoE,IACtBV,qBAAU,WACRC,MACC,IAHiC,MAIZC,mBAAS,IAJG,mBAI7BpC,EAJ6B,KAIvBsC,EAJuB,OAKJF,oBAAS,GALL,mBAK7BnC,EAL6B,KAKlBsC,EALkB,KAM9BJ,EAAW,WACfI,GAAW,GACX/B,MAAM,iHAGHC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAT,GACJM,QAAQC,IAAIP,EAAKa,SACjByB,EAAQtC,EAAKa,SACb0B,GAAW,OAGjB,OACE,yBAAK/D,UAAU,eACb,gCACE,wBAAIA,UAAU,yCAAd,gBACCyB,GAAa,kBAACuB,EAAD,MACd,yBAAKhD,UAAU,iBACZwB,EAAKyB,KAAI,SAAAC,GAAI,OACZ,yBAAKlD,UAAU,+BACb,yBACEuB,IAAK2B,EAAKzC,GACVK,MAAM,YACNC,MAAO,CAAEoC,SAAU,UAEnB,yBAAKrC,MAAM,kBACT,yBAAKA,MAAM,YACT,yBACE6B,IAAG,6CAAwCO,EAAKE,aAChDtC,MAAM,WACN+B,IAAI,SAGR,yBAAK/B,MAAM,YACT,yBAAKA,MAAM,uBACT,wBAAIA,MAAM,oBAAoBoC,EAAKG,OACnC,uBAAGvC,MAAM,aAAT,iBAAoCoC,EAAKI,cACzC,uBAAGxC,MAAM,aAAT,sBACsBoC,EAAKK,mBAE3B,uBAAGzC,MAAM,aAAT,YAA+BoC,EAAKM,cACpC,kBAAC,IAAD,CACEvD,GAAE,WAAMiD,EAAKzC,IACbT,UAAU,qCAFZ,uBAehB,yBAAKA,UAAU,gBC9DN,SAASqE,EAAT,GAA+B,IAAVC,EAAS,EAATA,MAClCZ,qBAAU,WACRC,MACC,IAHwC,MAIjBC,mBAAS,IAJQ,mBAIpCW,EAJoC,KAI7BC,EAJ6B,OAKXZ,oBAAS,GALE,mBAKpCnC,EALoC,KAKzBsC,EALyB,KAMrCJ,EAAW,WACfI,GAAW,GACX/B,MAAM,sCAAD,OACmCsC,EAAMG,OAAOhE,GADhD,6DAGFwB,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAT,GACJM,QAAQC,IAAIP,GACZgD,EAAShD,GACTuC,GAAW,OAIjB,OACE,yBAAK/D,UAAU,iBACb,gCACE,wBACEe,MAAO,CAAEI,MAAO,SAChBnB,UAAU,gDAFZ,cAOF,yBAAKA,UAAU,aACb,yBAAKS,GAAG,cACLgB,GAAa,kBAACuB,EAAD,MAGZ,gCACE,yBACEzB,IAAKgD,EAAM9D,GACXK,MAAM,YACNC,MAAO,CAAEoC,SAAU,QAASuB,OAAQ,kBAEpC,yBAAK5D,MAAM,kBACT,yBAAKA,MAAM,YACT,yBACE6B,IAAG,6CAAwC4B,EAAMnB,aACjDtC,MAAM,WACN+B,IAAI,SAGR,yBAAK/B,MAAM,YACT,yBAAKA,MAAM,uBACT,wBAAIA,MAAM,cAAcyD,EAAMlB,OAC9B,uBAAGvC,MAAM,aAAT,iBACiByD,EAAMjB,cAEvB,uBAAGxC,MAAM,aAAT,sBACsByD,EAAMhB,mBAE5B,uBAAGzC,MAAM,aAAT,YAA+ByD,EAAMf,cACrC,uBAAG1C,MAAM,aAAT,aAAgCyD,EAAMI,iBAUtD,yBAAK3E,UAAU,eCpEN,SAASqE,EAAT,GAA+B,IAAVC,EAAS,EAATA,MAClCZ,qBAAU,WACRC,IACA7B,QAAQC,IAAIuC,KACX,IAJwC,MAKjBV,mBAAS,IALQ,mBAKpCgB,EALoC,KAK7BC,EAL6B,KAMrClB,EAAW,WACf3B,MAAM,mCAAD,OACgCsC,EAAMG,OAAOhE,GAD7C,6DAGFwB,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAT,GACJM,QAAQC,IAAIP,GACZqD,EAASrD,OAIf,OACE,yBAAKxB,UAAU,iBACb,gCACE,wBACEe,MAAO,CAAEI,MAAO,SAChBnB,UAAU,gDAFZ,iBAOF,yBAAKA,UAAU,aACb,yBAAKS,GAAG,cAEJ,gCACE,yBACEc,IAAKqD,EAAMnE,GACXK,MAAM,YACNC,MAAO,CAAEoC,SAAU,QAASuB,OAAQ,iBAEpC,yBAAK5D,MAAM,kBACT,yBAAKA,MAAM,YACT,yBACE6B,IAAG,6CAAwCiC,EAAMxB,aACjDtC,MAAM,aACN+B,IAAI,SAGR,yBAAK/B,MAAM,YACT,yBAAKA,MAAM,uBACT,wBAAIA,MAAM,cAAc8D,EAAMpC,MAC9B,uBAAG1B,MAAM,aAAT,iBACiB8D,EAAMX,gBAEvB,uBAAGnD,MAAM,aAAT,sBACsB8D,EAAMrB,mBAE5B,uBAAGzC,MAAM,aAAT,YAA+B8D,EAAMpB,cACrC,uBAAG1C,MAAM,aAAT,aAAgC8D,EAAMD,UACtC,uBAAG7D,MAAM,aAAT,4BAC4B8D,EAAME,mBAElC,uBAAGhE,MAAM,aAAT,6BAC6B8D,EAAMG,2BAUnD,yBAAK/E,UAAU,eCtEN,SAASgF,IACtBtB,qBAAU,WACRuB,MACC,IAH0B,MAICrB,mBAAS,IAJV,mBAItBsB,EAJsB,KAIXC,EAJW,OAKGvB,oBAAS,GALZ,mBAKtBnC,EALsB,KAKXsC,EALW,KAMvBkB,EAAa,WACjBlB,GAAW,GACX/B,MAAM,kHAGHC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAT,GACJM,QAAQC,IAAIP,GACZ2D,EAAS3D,EAAK4D,UACdrB,GAAW,OAIjB,OACE,yBAAK/D,UAAU,eACb,4BAAQA,UAAU,QAChB,wBAAIA,UAAU,yCAAd,uBAIF,yBAAKA,UAAU,aACZyB,GAAa,kBAACuB,EAAD,MACd,yBAAKhD,UAAU,OACZkF,EAAUjC,KAAI,SAAAoC,GAAK,OAClB,yBAAKrF,UAAU,YACb,yBACEc,MAAM,4BACNC,MAAO,CAAEuE,UAAW,iCAEpB,yBAAKxE,MAAM,eAAeuE,EAAME,OAAO/C,MACvC,yBAAK1B,MAAM,aACT,gCAAYA,MAAM,mBAChB,uBAAGC,MAAO,CAAEyE,SAAU,KAAOH,EAAMhC,OACnC,4BAAQvC,MAAM,qBACZ,0BAAMuC,MAAM,gBAAgBgC,EAAMI,kBASlD,yBAAKzF,UAAU,M,iBCjBN0F,MArBf,WACE,OACE,kBAAC,IAAD,KACE,yBAAK1F,UAAU,0BAEb,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO2F,KAAK,IAAIC,OAAK,EAACC,UAAWC,IACjC,kBAAC,IAAD,CAAOH,KAAK,UAAUE,UAAWpC,IACjC,kBAAC,IAAD,CAAOkC,KAAK,WAAWC,OAAK,EAACC,UAAW7B,IACxC,kBAAC,IAAD,CAAO2B,KAAK,WAAWE,UAAW3B,IAClC,kBAAC,IAAD,CAAOyB,KAAK,QAAQE,UAAWb,IAC/B,kBAAC,IAAD,CAAOW,KAAK,eAAeE,UAAWzB,IACtC,kBAAC,IAAD,CAAOuB,KAAK,eAAeE,UAAWE,IACtC,kBAAC,IAAD,CAAOJ,KAAK,OAAOE,UAAWG,QChBpBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAS9B,MACvB,2DCbN+B,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD8H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM1E,MAAK,SAAA2E,GACjCA,EAAaC,iB","file":"static/js/main.171d5eb5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/undraw.e0e35bea.svg\";","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../App\";\r\nimport \"../App.css\";\r\n\r\nexport default class Search_Movies extends Component {\r\n  render() {\r\n    return (\r\n      <nav className=\"navbar navbar-expand-lg navbar-light\">\r\n        <div className=\"container text-uppercase\">\r\n          <Link to=\"/\">\r\n            <a className=\"navbar-brand text-white\" href=\"#home\">\r\n              MediaFlix\r\n            </a>\r\n          </Link>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav ml-auto\">\r\n              <li className=\"nav-item active\">\r\n                <Link className=\"nav-link text-white\" to=\"/movies\">\r\n                  Movies <span className=\"sr-only\">(current)</span>\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link text-white\" to=\"/tvshows\">\r\n                  T.V Shows\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item dropdown\">\r\n                <a\r\n                  className=\"nav-link dropdown-toggle text-white\"\r\n                  href=\"#dropdown\"\r\n                  id=\"navbarDropdown\"\r\n                  role=\"button\"\r\n                  data-toggle=\"dropdown\"\r\n                  aria-haspopup=\"true\"\r\n                  aria-expanded=\"false\"\r\n                >\r\n                  Categories\r\n                </a>\r\n                <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n                  <Link className=\"dropdown-item\" to=\"/popular\">\r\n                    Popular Movies\r\n                  </Link>\r\n                  <Link className=\"dropdown-item\" to=\"/newreleases\">\r\n                    New-Releases Movies\r\n                  </Link>\r\n                </div>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link text-white\" to=\"/news\">\r\n                  News\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nexport default () => {\r\n  return (\r\n    <center>\r\n      <div\r\n        class=\"spinner-border\"\r\n        style={{\r\n          width: \"4rem\",\r\n          height: \"4rem\",\r\n          marginTop: \"3rem\",\r\n          color: \"#ff0\"\r\n        }}\r\n        role=\"status\"\r\n      >\r\n        <span class=\"sr-only\">Loading...</span>\r\n      </div>\r\n    </center>\r\n  );\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../App.css\";\r\nimport imgMovie from \"../img/undraw.svg\";\r\nimport Preloader from \"./Preloader\";\r\nexport default class Landing_Page extends Component {\r\n  state = {\r\n    input: \"\",\r\n    key: \"0a3c058c4cdcdc5d426aeffc8ab1c63e\",\r\n    data: [],\r\n    isLoading: false\r\n  };\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n    this.setState({ isLoading: true }, () => {\r\n      console.log(this.state);\r\n    });\r\n    console.log(this.state.input);\r\n    fetch(\r\n      `https://api.themoviedb.org/3/search/movie?api_key=${this.state.key}&query=${this.state.input}`\r\n    )\r\n      .then(res => res.json())\r\n      .then(dataJson => {\r\n        console.log(dataJson);\r\n        this.setState({ data: dataJson.results, isLoading: false }, () => {\r\n          console.log(this.state);\r\n        });\r\n      });\r\n  };\r\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  render() {\r\n    const { input } = this.state;\r\n\r\n    return (\r\n      <div className=\"Landing _wrapper\">\r\n        <div className=\"container-fluid\">\r\n          <div className=\"heading\">\r\n            <div className=\"heading__wrapper\">\r\n              <h1 className=\"heading__h1\">Welcome To Media Flix</h1>\r\n              <p className=\"heading__p\">\r\n                Latest Movies Info At Your Finger Tips\r\n              </p>\r\n            </div>\r\n          </div>\r\n          <div className=\"img__movie__wrapper\">\r\n            <img src={imgMovie} className=\"img-movie\" alt=\"unDraw1\" />\r\n          </div>\r\n\r\n          <form onSubmit={this.onSubmit}>\r\n            <input\r\n              type=\"text\"\r\n              id=\"search-movie\"\r\n              name=\"input\"\r\n              value={input}\r\n              placeholder=\"Enter Movie Name \"\r\n              className=\"form-control\"\r\n              onChange={this.onChange}\r\n              required=\"True\"\r\n            />\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn search btn-outline-primary btn-block\"\r\n            >\r\n              Search\r\n            </button>\r\n          </form>\r\n        </div>\r\n        {this.state.isLoading && <Preloader />}\r\n        <div className=\"row main-card\">\r\n          {this.state.data.map(item => {\r\n            return (\r\n              <div className=\"col-sm-12 col-md-6 col-lg-4\">\r\n                <div\r\n                  key={item.id}\r\n                  class=\"card mb-3\"\r\n                  style={{ maxWidth: \"35rem\" }}\r\n                >\r\n                  <div class=\"row no-gutters\">\r\n                    <div class=\"col-md-4\">\r\n                      <img\r\n                        src={`https://image.tmdb.org/t/p/original${item.poster_path}`}\r\n                        class=\"card-img\"\r\n                        alt=\"...\"\r\n                      />\r\n                    </div>\r\n                    <div class=\"col-md-8\">\r\n                      <div class=\"card-body\">\r\n                        <h5 class=\"card-title\">{item.title}</h5>\r\n                        <p class=\"card-text\">\r\n                          Release Date: {item.release_date}\r\n                        </p>\r\n                        <p class=\"card-text\">\r\n                          Original Language: {item.original_language}\r\n                        </p>\r\n                        <p class=\"card-text\">Ratings: {item.vote_average}</p>\r\n                        <Link\r\n                          to={`/${item.id}`}\r\n                          className=\"btn more-info btn-outline-primary\"\r\n                        >\r\n                          More Info\r\n                        </Link>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n        <div className=\"bg-header \"></div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Preloader from \"./Preloader\";\r\n\r\nexport default function Movie() {\r\n  useEffect(() => {\r\n    discover();\r\n  }, []);\r\n  const [movie_data, setData] = useState([]);\r\n  const [isLoading, setLoading] = useState(false);\r\n  const discover = () => {\r\n    setLoading(true);\r\n    fetch(\r\n      `https://api.themoviedb.org/3/discover/movie?api_key=0a3c058c4cdcdc5d426aeffc8ab1c63e&language=en-US&sort_by=popularity.desc&page=1`\r\n    )\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        console.log(data.results);\r\n        setData(data.results);\r\n        setLoading(false);\r\n      });\r\n  };\r\n  //maxHeight: \"17.5625rem\"\r\n  return (\r\n    <div className=\"c-marginTop\">\r\n      <center>\r\n        <h1 className=\"white d-inline text-uppercase c-title\">Movies</h1>\r\n        {isLoading && <Preloader />}\r\n        <div className=\"row main-card\">\r\n          {movie_data.map(item => (\r\n            <div className=\"col-sm-12 col-md-6 col-lg-4\">\r\n              <div\r\n                key={item.id}\r\n                class=\"card mb-3\"\r\n                style={{ maxWidth: \"35rem\" }}\r\n              >\r\n                <div class=\"row no-gutters\">\r\n                  <div class=\"col-md-4\">\r\n                    <img\r\n                      src={`https://image.tmdb.org/t/p/original${item.poster_path}`}\r\n                      class=\"card-img\"\r\n                      alt=\"...\"\r\n                    />\r\n                  </div>\r\n                  <div class=\"col-md-8\">\r\n                    <div class=\"card-body text-left\">\r\n                      <h5 class=\"card-title title\">{item.title}</h5>\r\n                      <p class=\"card-text\">Release Date: {item.release_date}</p>\r\n                      <p class=\"card-text\">\r\n                        Original Language: {item.original_language}\r\n                      </p>\r\n                      <p class=\"card-text\">Ratings: {item.vote_average}</p>\r\n                      <Link\r\n                        to={`/${item.id}`}\r\n                        className=\"btn more-info btn-outline-primary\"\r\n                      >\r\n                        More Info\r\n                      </Link>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </center>\r\n\r\n      <div className=\"bg-header \"></div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Preloader from \"./Preloader\";\r\n\r\nexport default function TVshows() {\r\n  useEffect(() => {\r\n    discover();\r\n  }, []);\r\n  const [movie_data, setData] = useState([]);\r\n  const [isLoading, setLoading] = useState(false);\r\n  const discover = () => {\r\n    setLoading(true);\r\n    fetch(\r\n      `https://api.themoviedb.org/3/tv/popular?api_key=0a3c058c4cdcdc5d426aeffc8ab1c63e&language=en-US&page=1`\r\n    )\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        console.log(data.results);\r\n        setData(data.results);\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"c-marginTop\">\r\n      <center>\r\n        <h1 className=\"white d-inline text-uppercase c-title\">T.V.Shows</h1>\r\n        {isLoading && <Preloader />}\r\n        <div className=\"row main-card\">\r\n          {movie_data.map(item => (\r\n            <div className=\"col-sm-12 col-md-6 col-lg-4\">\r\n              <div\r\n                key={item.id}\r\n                class=\"card mb-3\"\r\n                style={{ maxWidth: \"35rem\" }}\r\n              >\r\n                <div class=\"row no-gutters\">\r\n                  <div class=\"col-md-4\">\r\n                    <img\r\n                      src={`https://image.tmdb.org/t/p/original${item.poster_path}`}\r\n                      class=\"card-img\"\r\n                      alt=\"...\"\r\n                    />\r\n                  </div>\r\n                  <div class=\"col-md-8\">\r\n                    <div class=\"card-body text-left\">\r\n                      <h5 class=\"card-title title\">{item.name}</h5>\r\n                      <p class=\"card-text\">\r\n                        Release Date: {item.first_air_date}\r\n                      </p>\r\n                      <p class=\"card-text\">\r\n                        Original Language: {item.original_language}\r\n                      </p>\r\n                      <p class=\"card-text\">Ratings: {item.vote_average}</p>\r\n                      <Link\r\n                        to={`/tvshows/${item.id}`}\r\n                        className=\"btn more-info btn-outline-primary\"\r\n                      >\r\n                        More Info\r\n                      </Link>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </center>\r\n      <div className=\"bg-header \"></div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Preloader from \"./Preloader\";\r\n\r\nexport default function Popular() {\r\n  useEffect(() => {\r\n    discover();\r\n  }, []);\r\n  const [movie_data, setData] = useState([]);\r\n  const [isLoading, setloading] = useState(false);\r\n  const discover = () => {\r\n    setloading(true);\r\n    fetch(\r\n      `https://api.themoviedb.org/3/movie/popular?api_key=0a3c058c4cdcdc5d426aeffc8ab1c63e&language=en-US&page=1`\r\n    )\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        console.log(data.results);\r\n        setData(data.results);\r\n        setloading(false);\r\n      });\r\n  };\r\n  return (\r\n    <div className=\"c-marginTop\">\r\n      <center>\r\n        <h1 className=\"white d-inline text-uppercase c-title\">\r\n          Popular Movies\r\n        </h1>\r\n        {isLoading && <Preloader />}\r\n        <div className=\"row main-card\">\r\n          {movie_data.map(item => (\r\n            <div className=\"col-sm-12 col-md-6 col-lg-4\">\r\n              <div\r\n                key={item.id}\r\n                class=\"card mb-3\"\r\n                style={{ maxWidth: \"35rem\" }}\r\n              >\r\n                <div class=\"row no-gutters\">\r\n                  <div class=\"col-md-4\">\r\n                    <img\r\n                      src={`https://image.tmdb.org/t/p/original${item.poster_path}`}\r\n                      class=\"card-img\"\r\n                      alt=\"...\"\r\n                    />\r\n                  </div>\r\n                  <div class=\"col-md-8\">\r\n                    <div class=\"card-body text-left\">\r\n                      <h5 class=\"card-title title\">{item.title}</h5>\r\n                      <p class=\"card-text\">Release Date: {item.release_date}</p>\r\n                      <p class=\"card-text\">\r\n                        Original Language: {item.original_language}\r\n                      </p>\r\n                      <p class=\"card-text\">Ratings: {item.vote_average}</p>\r\n                      <Link\r\n                        to={`/${item.id}`}\r\n                        className=\"btn more-info btn-outline-primary\"\r\n                      >\r\n                        More Info\r\n                      </Link>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </center>\r\n\r\n      <div className=\"bg-header \"></div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Preloader from \"./Preloader\";\r\n\r\nexport default function Newreleases() {\r\n  useEffect(() => {\r\n    discover();\r\n  }, []);\r\n  const [data, setData] = useState([]);\r\n  const [isLoading, setLoading] = useState(false);\r\n  const discover = () => {\r\n    setLoading(true);\r\n    fetch(\r\n      `https://api.themoviedb.org/3/movie/now_playing?api_key=0a3c058c4cdcdc5d426aeffc8ab1c63e&language=en-US&page=1`\r\n    )\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        console.log(data.results);\r\n        setData(data.results);\r\n        setLoading(false);\r\n      });\r\n  };\r\n  return (\r\n    <div className=\"c-marginTop\">\r\n      <center>\r\n        <h1 className=\"white d-inline text-uppercase c-title\">New Releases</h1>\r\n        {isLoading && <Preloader />}\r\n        <div className=\"row main-card\">\r\n          {data.map(item => (\r\n            <div className=\"col-sm-12 col-md-6 col-lg-4\">\r\n              <div\r\n                key={item.id}\r\n                class=\"card mb-3\"\r\n                style={{ maxWidth: \"35rem\" }}\r\n              >\r\n                <div class=\"row no-gutters\">\r\n                  <div class=\"col-md-4\">\r\n                    <img\r\n                      src={`https://image.tmdb.org/t/p/original${item.poster_path}`}\r\n                      class=\"card-img\"\r\n                      alt=\"...\"\r\n                    />\r\n                  </div>\r\n                  <div class=\"col-md-8\">\r\n                    <div class=\"card-body text-left\">\r\n                      <h5 class=\"card-title title\">{item.title}</h5>\r\n                      <p class=\"card-text\">Release Date: {item.release_date}</p>\r\n                      <p class=\"card-text\">\r\n                        Original Language: {item.original_language}\r\n                      </p>\r\n                      <p class=\"card-text\">Ratings: {item.vote_average}</p>\r\n                      <Link\r\n                        to={`/${item.id}`}\r\n                        className=\"btn more-info btn-outline-primary\"\r\n                      >\r\n                        More Info\r\n                      </Link>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </center>\r\n\r\n      <div className=\"bg-header \"></div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"../App.css\";\r\nimport Preloader from \"./Preloader\";\r\n\r\nexport default function More_Info({ match }) {\r\n  useEffect(() => {\r\n    discover();\r\n  }, []);\r\n  const [mData, setMData] = useState([]);\r\n  const [isLoading, setLoading] = useState(false);\r\n  const discover = () => {\r\n    setLoading(true);\r\n    fetch(\r\n      `https://api.themoviedb.org/3/movie/${match.params.id}?api_key=0a3c058c4cdcdc5d426aeffc8ab1c63e&language=en-US`\r\n    )\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        console.log(data);\r\n        setMData(data);\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"more__wrapper\">\r\n      <center>\r\n        <h1\r\n          style={{ color: \"white\" }}\r\n          className=\"text-uppercase display-5 d-inline more__info\"\r\n        >\r\n          More Info\r\n        </h1>\r\n      </center>\r\n      <div className=\"container\">\r\n        <div id=\"main__card\">\r\n          {isLoading && <Preloader />}\r\n\r\n          {\r\n            <center>\r\n              <div\r\n                key={mData.id}\r\n                class=\"card mb-3\"\r\n                style={{ maxWidth: \"50rem\", margin: \"3rem 0 0 0rem\" }}\r\n              >\r\n                <div class=\"row no-gutters\">\r\n                  <div class=\"col-md-4\">\r\n                    <img\r\n                      src={`https://image.tmdb.org/t/p/original${mData.poster_path}`}\r\n                      class=\"card-img\"\r\n                      alt=\"...\"\r\n                    />\r\n                  </div>\r\n                  <div class=\"col-md-8\">\r\n                    <div class=\"card-body text-left\">\r\n                      <h5 class=\"card-title\">{mData.title}</h5>\r\n                      <p class=\"card-text\">\r\n                        Release Date: {mData.release_date}\r\n                      </p>\r\n                      <p class=\"card-text\">\r\n                        Original Language: {mData.original_language}\r\n                      </p>\r\n                      <p class=\"card-text\">Ratings: {mData.vote_average}</p>\r\n                      <p class=\"card-text\">Overview: {mData.overview}</p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </center>\r\n          }\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"bg-header\"></div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"../App.css\";\r\nimport Preloader from \"./Preloader\";\r\n\r\nexport default function More_Info({ match }) {\r\n  useEffect(() => {\r\n    discover();\r\n    console.log(match);\r\n  }, []);\r\n  const [tData, setTData] = useState([]);\r\n  const discover = () => {\r\n    fetch(\r\n      `https://api.themoviedb.org/3/tv/${match.params.id}?api_key=0a3c058c4cdcdc5d426aeffc8ab1c63e&language=en-US`\r\n    )\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        console.log(data);\r\n        setTData(data);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"more__wrapper\">\r\n      <center>\r\n        <h1\r\n          style={{ color: \"white\" }}\r\n          className=\"text-uppercase display-5 d-inline more__info\"\r\n        >\r\n          More Tv Info\r\n        </h1>\r\n      </center>\r\n      <div className=\"container\">\r\n        <div id=\"main__card\">\r\n          {\r\n            <center>\r\n              <div\r\n                key={tData.id}\r\n                class=\"card mb-3\"\r\n                style={{ maxWidth: \"50rem\", margin: \"3rem 0 0 0em\" }}\r\n              >\r\n                <div class=\"row no-gutters\">\r\n                  <div class=\"col-md-4\">\r\n                    <img\r\n                      src={`https://image.tmdb.org/t/p/original${tData.poster_path}`}\r\n                      class=\" img-fluid\"\r\n                      alt=\"...\"\r\n                    />\r\n                  </div>\r\n                  <div class=\"col-md-8\">\r\n                    <div class=\"card-body text-left\">\r\n                      <h5 class=\"card-title\">{tData.name}</h5>\r\n                      <p class=\"card-text\">\r\n                        Release Date: {tData.first_air_date}\r\n                      </p>\r\n                      <p class=\"card-text\">\r\n                        Original Language: {tData.original_language}\r\n                      </p>\r\n                      <p class=\"card-text\">Ratings: {tData.vote_average}</p>\r\n                      <p class=\"card-text\">Overview: {tData.overview}</p>\r\n                      <p class=\"card-text\">\r\n                        Total Number Of Seasons: {tData.number_of_seasons}\r\n                      </p>\r\n                      <p class=\"card-text\">\r\n                        Total Number Of Episodes: {tData.number_of_episodes}\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </center>\r\n          }\r\n        </div>\r\n      </div>\r\n      <div className=\"bg-header\"></div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Preloader from \"./Preloader\";\r\n\r\nexport default function News() {\r\n  useEffect(() => {\r\n    fetch_News();\r\n  }, []);\r\n  const [news_data, setNData] = useState([]);\r\n  const [isLoading, setLoading] = useState(false);\r\n  const fetch_News = () => {\r\n    setLoading(true);\r\n    fetch(\r\n      `https://newsapi.org/v2/top-headlines?country=in&apiKey=4f0ed34c2436488fbea43a2b2255489e&category=entertainment`\r\n    )\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        console.log(data);\r\n        setNData(data.articles);\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"marginTop-c\">\r\n      <center className=\"mt-5\">\r\n        <h1 className=\"white c-title d-inline text-uppercase\">\r\n          Entertainment News\r\n        </h1>\r\n      </center>\r\n      <div className=\"container\">\r\n        {isLoading && <Preloader />}\r\n        <div className=\"row\">\r\n          {news_data.map(items => (\r\n            <div className=\"col-md-6\">\r\n              <div\r\n                class=\"card h-75 news__card mb-4\"\r\n                style={{ boxShadow: \"0 2px 30px rgba(0, 0, 0, .1)\" }}\r\n              >\r\n                <div class=\"card-header\">{items.source.name}</div>\r\n                <div class=\"card-body\">\r\n                  <blockquote class=\"blockquote mb-0\">\r\n                    <p style={{ fontSize: 16 }}>{items.title}</p>\r\n                    <footer class=\"blockquote-footer\">\r\n                      <cite title=\"Source Title\">{items.author}</cite>\r\n                    </footer>\r\n                  </blockquote>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <div className=\"\"></div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport Nav from \"./components/Nav\";\nimport LandingPage from \"./components/Landing_Page\";\nimport Movie from \"./components/Movie\";\nimport TVshows from \"./components/TVshows\";\nimport Popular from \"./components/Popular\";\nimport Newreleases from \"./components/Newreleases\";\nimport MoreInfo from \"./components/More_Info\";\nimport MoreTvInfo from \"./components/More_Tv_Info\";\nimport News from \"./components/News\";\nimport Preloader from \"./components/Preloader\";\nimport \"./App.css\";\nimport \"../src/index.css\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nfunction App() {\n  return (\n    <Router>\n      <div className=\"main-container-wrapper\">\n        {/* <Preloader /> */}\n        <Nav />\n        <Switch>\n          <Route path=\"/\" exact component={LandingPage} />\n          <Route path=\"/movies\" component={Movie} />\n          <Route path=\"/tvshows\" exact component={TVshows} />\n          <Route path=\"/popular\" component={Popular} />\n          <Route path=\"/news\" component={News} />\n          <Route path=\"/newreleases\" component={Newreleases} />\n          <Route path=\"/tvshows/:id\" component={MoreTvInfo} />\n          <Route path=\"/:id\" component={MoreInfo} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n\n// <LandingPage />\n\n//<Route path=\"search_movies\" component={SearchMovies} />\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}